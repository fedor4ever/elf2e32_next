// Copyright (c) 2018 Strizhniou Fiodar
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Strizhniou Fiodar - initial contribution.
//
// Contributors:
//
// Description:
// Describe E32Image sections layout
//
//

E32Image layout:

HEADER
BITMAP
CODE
EXPORTS
SYMLOOK
DATA
IMPORTS
CODERELOCKS
DATARELOCKS


HEADER
| Prameters:
|| Ofset: 0
|| Size: sizeof(E32ImageHeader) + sizeof(iUncompressedSize) + sizeof(E32ImageHeaderV)


BITMAP
| Prameters:
|| Ofset: E32ImageHeaderV::iExportDesc[1]
|| Size: E32ImageHeaderV:iExportDescSize
|| Optional

CODE
| Prameters:
|| Ofset: E32ImageHeader::iCodeOffset
|| Size: E32ImageHeader::iCodeSize

EXPORTS
| Prameters:
|| Ofset: E32ImageHeader::iExportDirOffset
|| Size: E32ImageHeader::iExportDirCount * 4
|| Optional

SYMLOOK
| Prameters:
|| Ofset: E32Parser::GetEpocExpSymInfoHdr()
|| Size: E32EpocExpSymInfoHdr::iSize
|| Optional

DATA
| Prameters:
|| Ofset: E32ImageHeader::iDataOffset
|| Size: E32ImageHeader::iDataSize
|| Optional

IMPORTS
| Prameters:
|| Ofset: E32ImageHeader::GetImportSection()
|| Size: E32ImportSection::iSize

CODERELOCKS
| Prameters:
|| Ofset: E32ImageHeader::iCodeRelocOffset
||| if DATARELOCKS
|| Size: E32ImageHeader::iDataRelocOffset - E32ImageHeader::iCodeRelocOffset
||| if no DATARELOCKS
|| Size: E32Parser::GetFileSize() - E32ImageHeader::iCodeRelocOffset

DATARELOCKS
| Prameters:
|| Ofset: E32ImageHeader::iDataRelocOffset
|| Size: E32Parser::GetFileSize() - iHdr->iDataRelocOffset
|| Optional


For valid E32Image the following are true:
 - File size is big enough to contain the entire header.
 - Values #iUidChecksum, #iSignature and #iHeaderCrc are correct.
 - CPU type (#iCpuIdentifier), ABI type (#iFlags&#KImageABIMask) and
   entrypoint type (#iFlags&#KImageEptMask) are valid for this system.
 - Code part of file as specified by #iCodeOffset and #iCodeSize is fully within the file.
 - Text section size (#iTextSize) is within code part.
 - Entrypoint value (#iEntryPoint) lies within the code part and is aligned correctly.
 - Export directory as specified by #iExportDirCount and #iExportDirOffset is fully
   within code part and is aligned correctly.
 - Exception description (E32ImageHeaderV::iExceptionDescriptor), if present,
   lies within the code part.
 - Data part of file as specified by #iDataOffset and #iDataSize is fully within the file.
   Or data is not present (#iDataOffset==#iDataSize==0).
 - Import section (class E32ImportSection at #iImportOffset) is within 'rest of data'
   and aligned correctly. Data following the E32ImportSection header is NOT validated or
   checked if it is fully contained within the file.
 - Code relocations (class E32RelocSection at #iCodeRelocOffset) is within 'rest of data'
   and aligned correctly. Data following the E32RelocSection header is NOT validated or
   checked if it is fully contained within the file.
 - Data relocations (class E32RelocSection at #iDataRelocOffset) is within 'rest of data'
   and aligned correctly. Data following the E32RelocSection header is NOT validated or
   checked if it is fully contained within the file.
 - Export description is validated by E32ImageHeaderV::ValidateExportDescription().
 - #iUid1 is consistant with #iFlags&#KImageDll. I.e. if flaged as a DLL, #iUid1 is
   KDynamicLibraryUidValue, otherwise it is KExecutableImageUidValue.
 - Version number (#iModuleVersion) is valid. (Major and minor versions are <32768).
 - File compression type (#iCompressionType) is supported.
 - #iHeapSizeMax>=#iHeapSizeMin
 - All signed values in header are not negative.